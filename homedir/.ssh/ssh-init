#!/bin/bash

#
# FUNCTIONS
#
match_domain() {
    local re=".${domain}$"
    if [[ "$hostname" =~ $re ]]; then
        return 0
    else
        return 1
    fi
}

agent_init() {
    export SSH_AUTH_SOCK="$agent_sock"
    if ! ssh-add -L > /dev/null 2> /dev/null; then
        rm -f "$agent_sock"
        unset SSH_AUTH_SOCK
    fi
    if ! test -S "$agent_sock"; then
        eval ssh-agent -a "$agent_sock" 2> /dev/null > /dev/null
    fi
}
agent_load_keys() {
    export SSH_AUTH_SOCK="$agent_sock"
    find -L "${HOME}/.ssh" -maxdepth 1 -type f -name "id_*_${domain/./_}" \
        -exec ssh-add -v {} \;
}

#
# MAIN
#
case "${1:?}" in
    load)
        domain="${2:?}"
        agent_sock="${3:-"${HOME}/.ssh/agent_${domain/./_}.sock"}"
        agent_init
        agent_load_keys
    ;;
    lock)
        domain="${2:?}"
        agent_sock="${3:-"${HOME}/.ssh/agent_${domain/./_}.sock"}"
        export SSH_AUTH_SOCK="$agent_sock"
        ssh-add -x
    ;;
    unlock)
        domain="${2:?}"
        agent_sock="${3:-"${HOME}/.ssh/agent_${domain/./_}.sock"}"
        export SSH_AUTH_SOCK="$agent_sock"
        ssh-add -X
    ;;
    check)
        hostname="${2:?}"
        domain="${3:?}"
        agent_sock="${4:-"${HOME}/.ssh/agent_${domain/./_}.sock"}"

        if match_domain; then
            test -S "$agent_sock" || echo "Run 'ssh-init load ${domain}' first!" >&2
            agent_init
            exit 0
        fi
        exit 1
    ;;
esac
